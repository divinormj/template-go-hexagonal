// Code generated by mockery v2.46.1. DO NOT EDIT.

package mocks

import (
	entities "template/internal/domain/entities"

	mock "github.com/stretchr/testify/mock"
)

// EntityGateway is an autogenerated mock type for the EntityGateway type
type EntityGateway struct {
	mock.Mock
}

// Create provides a mock function with given fields: entity
func (_m *EntityGateway) Create(entity entities.Entity) (entities.Entity, error) {
	ret := _m.Called(entity)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 entities.Entity
	var r1 error
	if rf, ok := ret.Get(0).(func(entities.Entity) (entities.Entity, error)); ok {
		return rf(entity)
	}
	if rf, ok := ret.Get(0).(func(entities.Entity) entities.Entity); ok {
		r0 = rf(entity)
	} else {
		r0 = ret.Get(0).(entities.Entity)
	}

	if rf, ok := ret.Get(1).(func(entities.Entity) error); ok {
		r1 = rf(entity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: id
func (_m *EntityGateway) Delete(id string) error {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *EntityGateway) Get(id string) (entities.Entity, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 entities.Entity
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (entities.Entity, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) entities.Entity); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(entities.Entity)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: entity
func (_m *EntityGateway) Update(entity entities.Entity) (entities.Entity, error) {
	ret := _m.Called(entity)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 entities.Entity
	var r1 error
	if rf, ok := ret.Get(0).(func(entities.Entity) (entities.Entity, error)); ok {
		return rf(entity)
	}
	if rf, ok := ret.Get(0).(func(entities.Entity) entities.Entity); ok {
		r0 = rf(entity)
	} else {
		r0 = ret.Get(0).(entities.Entity)
	}

	if rf, ok := ret.Get(1).(func(entities.Entity) error); ok {
		r1 = rf(entity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEntityGateway creates a new instance of EntityGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEntityGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *EntityGateway {
	mock := &EntityGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
